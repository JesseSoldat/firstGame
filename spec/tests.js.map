{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/prey.js","js/tests.js"],"names":[],"mappings":"AAAA;;;;;;ACAA,IAAI,IAAI,GAAG,SAAP,IAAI,GAAc;AACpB,MAAI,CAAC,MAAM,GAAG,GAAG,CAAC;;AAElB,MAAI,CAAC,GAAG,GAAG,UAAS,GAAG,EAAE;AACvB,QAAI,SAAS,GAAG,GAAG,IAAI,EAAE,CAAC;AAC1B,WAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;GAC9C,CAAC;CACH,CAAC;;qBAEa,IAAI;;;;;;;;oBCTF,QAAQ;;;;AAEzB,AAAC,CAAA,YAAW;AACV,cAAY,CAAC;;AAEb,UAAQ,CAAC,eAAe,EAAE,YAAW;;AAEnC,cAAU,CAAE,YAAW;AACrB,YAAM,CAAC,CAAC,GAAG,uBAAU,CAAC;KACvB,CAAC,CAAC;;AAEH,YAAQ,CAAC,kBAAkB,EAAE,YAAW;AACtC,QAAE,CAAC,mCAAmC,EAAE,YAAY;AAClD,cAAM,CAAC,CAAC,6BAAgB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;OAC1C,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,YAAQ,CAAC,iBAAiB,EAAE,YAAW;AACrC,QAAE,CAAC,uCAAuC,EAAE,YAAW;AACrD,cAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OAChC,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,YAAQ,CAAC,oBAAoB,EAAE,YAAW;AACxC,QAAE,CAAC,2CAA2C,EAAE,YAAW;AACzD,SAAC,CAAC,GAAG,EAAE,CAAC;AACR,cAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACnC,CAAC,CAAA;KACH,CAAC,CAAC;GAEJ,CAAC,CAAC;CAEJ,CAAA,EAAE,CAAE","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let Prey = function() {\n  this.health = 100;\n\n  this.hit = function(num) {\n    let hitPoints = num || 10;\n    return this.health = this.health - hitPoints;\n  };\n};\n\nexport default Prey;","import Prey from './prey';\n\n(function() {\n  'use strict';\n\n  describe('About My Prey', function() {\n\n    beforeEach( function() {\n      window.x = new Prey();\n    });\n\n    describe('creating my Prey', function() {\n      it('should create an instance of Prey', function () {\n        expect(x instanceof Prey).to.equal(true);\n      });\n    });\n\n    describe('my Preys health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(100);\n      });\n    });\n\n    describe('Prey taking damage', function() {\n      it('should lower the score, after getting hit', function() {\n        x.hit();\n        expect(x.health).to.be.below(100);\n      })\n    });\n\n  });\n\n}());\n\n\n// Good Guy\n\n// Bad Guy\n\n\n// Both will have attack methods\n// Both will have health\n\n"]}